@model NICO.ViewModel.LoanViewModel;

<h1>Add Loan </h1>

<form asp-action="AddLoan" method="post">
    <input type="hidden" asp-for="Borrower" />

    <div class="form-group">
        <label asp-for="Amount" class="control-label"></label>
        <input asp-for="Amount" class="form-control" />
        <span asp-validation-for="Amount" class="text-danger"></span>
    </div>
    
    <div class="form-group">
        <label asp-for="Term" class="control-label"></label>
        <input asp-for="Term" class="form-control" />
        <span asp-validation-for="Term" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Payment" class="control-label"></label>
        @* <input asp-for="Payment" class="form-control" /> *@
        <select asp-for="Payment" class="form-control">
            <option value="">Choose Payment Duration</option>
            <option value="Daily">Daily</option>
            <option value="Weekly">Weekly</option>
            <option value="Monthly">Monthly</option>
            <option value="Semester">Semester</option>
            <option value="Year">Year</option>
        </select>
        <span asp-validation-for="Payment" class="text-danger"></span>
    </div>
    
    <div class="form-group">
        <label asp-for="Interest" class="control-label"></label>
        <input asp-for="Interest" class="form-control" />
        <span asp-validation-for="Interest" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Deduction" class="control-label"></label>
        <input asp-for="Deduction" class="form-control" />
        <span asp-validation-for="Deduction" class="text-danger"></span>
    </div>

<div class="form-group">
        <label asp-for="AmountPaid" class="control-label"></label>
        <input asp-for="AmountPaid" class="form-control" readonly/>
        <span asp-validation-for="AmountPaid" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Total" class="control-label"></label>
        <input asp-for="Total" class="form-control" readonly/>
        <span asp-validation-for="Total" class="text-danger"></span>
    </div>


    <div class="form-group">
        <label asp-for="DueDate" class="control-label"></label>
        <input type="date" asp-for="DueDate" class="form-control" readonly/>
        <span asp-validation-for="DueDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="hidden" asp-for="ReceivableAmount" class="form-control" readonly/>
        <span asp-validation-for="ReceivableAmount" class="text-danger"></span>
    </div>

    

    <button type="submit" class="btn btn-primary">Save</button>
</form>

@section Scripts {
    <script>
        document.getElementById('Amount').addEventListener('input', function() {
    calculateAmountPaidAndTotal();
});

document.getElementById('Term').addEventListener('input', function() {
    calculateAmountPaidAndTotal();
});

document.getElementById('Interest').addEventListener('input', function() {
    calculateAmountPaidAndTotal();
});

document.getElementById('Deduction').addEventListener('input', function() {
    calculateTotal();
});

function calculateAmountPaidAndTotal() {
    var amount = parseFloat(document.getElementById('Amount').value);
    var term = parseFloat(document.getElementById('Term').value);
    var interest = parseFloat(document.getElementById('Interest').value);
    if (!isNaN(amount) && !isNaN(term) && !isNaN(interest)) {
        var amountPaid = amount / term;
        document.getElementById('AmountPaid').value = amountPaid.toFixed(2);
        var total = amount - (amount * (interest / 100));
        var deduction = parseFloat(document.getElementById('Deduction').value);
        if (!isNaN(deduction)) {
            total -= deduction;
        }
        document.getElementById('Total').value = total.toFixed(2);
        document.getElementById('ReceivableAmount').value = total.toFixed(2);
    }
}

function calculateTotal() {
    var amount = parseFloat(document.getElementById('Amount').value);
    var interest = parseFloat(document.getElementById('Interest').value);
    if (!isNaN(amount) && !isNaN(interest)) {
        var total = amount - (amount * (interest / 100));
        var deduction = parseFloat(document.getElementById('Deduction').value);
        if (!isNaN(deduction)) {
            total -= deduction;
        }
        document.getElementById('Total').value = total.toFixed(2);
        document.getElementById('ReceivableAmount').value = total.toFixed(2);
    }
}

document.getElementById('Payment').addEventListener('change', function() {
    calculateDueDate();
});

function calculateDueDate() {
    var payment = document.getElementById('Payment').value;
    var currentDate = new Date();
    switch(payment) {
        case 'Daily':
            currentDate.setDate(currentDate.getDate() + 1);
            break;
        case 'Weekly':
            currentDate.setDate(currentDate.getDate() + 7);
            break;
        case 'Monthly':
            currentDate.setMonth(currentDate.getMonth() + 1);
            break;
        case 'Semester':
            currentDate.setMonth(currentDate.getMonth() + 6);
            break;
        case 'Year':
            currentDate.setFullYear(currentDate.getFullYear() + 1);
            break;
        default:
            break;
    }
    var dueDate = currentDate.toISOString().split('T')[0];
    document.getElementById('DueDate').value = dueDate;
}

    </script>
}
